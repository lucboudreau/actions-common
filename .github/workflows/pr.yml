name: Pentaho pull request workflow
on:
  workflow_call:
    inputs:
      slack_channels:
        type: string
        required: true
        description: "Slack channel(s) to send notifications to."
      arti_host:
        required: false
        type: string
        default: https://repo.orl.eng.hitachivantara.com
        description: "Artifactory's Host name"
      sonar_project_key:
        required: true
        type: string
        description: "Sonar's project identifier key"
      sonar_url:
        required: false
        type: string
        description: "Sonar's URL"
        default: https://sonar.orl.eng.hitachivantara.com

env:

  SONAR_PROJECT_KEY: ${{ inputs.sonar_project_key }}
  SONAR_HOST_URL: ${{ inputs.sonar_url }}
  SONAR_LOGIN: ${{secrets.WINGMAN_SONAR_TOKEN}}

  ARTIFACTORY_HOST: ${{ inputs.arti_host }}
  ARTIFACTORY_BASE_URL: ${ARTIFACTORY_HOST}/artifactory

  RESOLVE_REPO_MIRROR: ${ARTIFACTORY_BASE_URL}/pnt-mvn

  NEXUS_DEPLOY_USER: ${{ secrets.ARTIFACTORY_USER }}
  NEXUS_DEPLOY_PASSWORD: ${{ secrets.ARTIFACTORY_API_KEY }}

  PUBLIC_RELEASE_REPO_URL: ${ARTIFACTORY_BASE_URL}/pntpub-mvn-dev-orl
  PRIVATE_RELEASE_REPO: pntprv-mvn-dev-orl
  PRIVATE_RELEASE_REPO_URL: ${ARTIFACTORY_BASE_URL}/${PRIVATE_RELEASE_REPO}

  PUBLIC_SNAPSHOT_REPO_URL: ${ARTIFACTORY_BASE_URL}/pntpub-mvn-snapshot-orl
  PRIVATE_SNAPSHOT_REPO: pntprv-mvn-snapshot-orl
  PRIVATE_SNAPSHOT_REPO_URL: ${ARTIFACTORY_BASE_URL}/${PRIVATE_SNAPSHOT_REPO}

  DOCKER_PULL_HOST: pnt-docker.repo.orl.eng.hitachivantara.com/
  DOCKER_PUBLIC_PUSH_HOST: pntpub-docker-dev-orl.repo.orl.eng.hitachivantara.com
  DOCKER_PRIVATE_PUSH_HOST: pntprv-docker-dev-orl.repo.orl.eng.hitachivantara.com

  SLACK_CHANNEL: "${{ inputs.slack_channels }}"

jobs:

  setup-maven-settings:
    name: Setup Maven settings

    runs-on: [ k8s ]

    container:
      image: docker.repo.orl.eng.hitachivantara.com/pentaho/actions-common:20230712.10
      volumes:
        - /home/runner/caches/pentaho/.m2:/root/.m2

    steps:

      - name: Retrieve settings file
        id: common-maven
        uses: pentaho/actions-common@1.0.0

      - name: Copy settings.xml to .m2 directory
        shell: sh
        run: |
          cp "${{ steps.common-maven.outputs.settings-file-path }}" /root/.m2
    

  pentaho-job:
    needs: setup-maven-settings
    runs-on: [ k8s ]

    container:
      image: docker.repo.orl.eng.hitachivantara.com/pentaho/actions-common:20230712.10
      volumes:
        - /home/runner/caches/pentaho/.m2:/root/.m2

    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine which changes occurred
        id: change_detection
        uses: hv-actions/change-detection-builder@1.0.0

      - name: Build the project for changed modules only
        uses: lumada-common-services/gh-composite-actions@slack-open
        with:
          command: mvn clean install -pl "${{ steps.change_detection.outputs.changed_modules }}" -DskipTests -amd
        env:
          cmd_type: BUILD

      - name: Run unit-tests
        uses: lumada-common-services/gh-composite-actions@slack-open
        with:
          command: mvn verify -pl "${{ steps.change_detection.outputs.changed_modules }}" -B -Daudit -amd
        env:
          cmd_type: UNIT_TEST

      - name: Sonarqube scan
        uses: lumada-common-services/gh-composite-actions@slack-open
        env:
          sonar_utility: sonar-scanner
          sonar_commands: '("-Dsonar.projectKey=${{env.SONAR_PROJECT_KEY}} -Dsonar.host.url=${{env.SONAR_HOST_URL}} -Dsonar.login=${{env.SONAR_LOGIN}} -Dsonar.pullrequest.key=${{github.event.number}} -Dsonar.pullrequest.branch=${{github.event.pull_request.head.ref}} -Dsonar.pullrequest.base=${{github.event.pull_request.base.ref}}")'

      - name: Report notifications
        if: always()
        uses: lumada-common-services/gh-composite-actions@slack-open
        env:
          Slack_Token: ${{ secrets.SLACK_TOKEN }}
          Slack_Channel: ${{ env.SLACK_CHANNEL }}
          report: true